############################
###     NIAM  /  TLS     ###
############################

global(

        # Chargement du module GnuTLS
        # CA du serveur de destinations
        # Certificat et clé privée du serveur source - celui-ci.
        DefaultNetstreamDriver         = "gtls"
        DefaultNetstreamDriverCAFile   = "/etc/ssl/certs/ca-certificates.crt"
        #DefaultNetstreamDriverCertFile = "/path/to/this/server/client/certificate.pem"
        #DefaultNetstreamDriverKeyFile  = "/path/to/this/server/client/private_key.pem"
)

*.* action(

        # Utilisation de l'Ouptut Module ForWarD pour l'envoie de log.
        # Renseignemente du de l'adresse du serveur, du port et du protocol.
        type     = "omfwd"
        target   = "graylog.nerd.mooc"
        port     = "20514"
        protocol = "tcp"

        # Utilisation de IETF SyslogProtocol - Amélioration du Timestamp.
        template = "RSYSLOG_SyslogProtocol23Format"

        # Utilisation de GnuTLS pour l'envoie de log
        # "1" pour l'utilisation de TLS.
        # Verification de la validité du certificat par son nom.
        # Autorisation des communication qu'avec cet hôte.
        StreamDriver               = "gtls"
        StreamDriverMode           = "1"
        StreamDriverAuthMode       = "x509/name"
        StreamDriverPermittedPeers = "graylog.nerd.mooc"

        # Ré-envoie du message jusqu'à réception par le destinataire
        # Nom des fichiers dans le spooler rsyslog
        # Envoie asynchrone des fichiers de log
        # Taille maximale de fichier dans le spooler
        # Enregistrement des messages en local en cas d'interruption
        action.resumeRetryCount    = "-1"
        queue.fileName             = "rsyslog_niam_tcp_tls"
        queue.type                 = "linkedList"
        queue.size                 = "10000"
        queue.saveonshutdown       = "on"
)
