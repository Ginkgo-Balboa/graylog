# Here we define our upstream software
upstream graylog
{
    server graymongo01.cat.nap:9000 max_fails=3 fail_timeout=30s;
}

server
{
    listen                  *:80;
    server_name             graylog.nerd.mooc;
    return 301              https://$host$request_uri;
    access_log              /var/log/nginx/graylog-nerd.mooc.access.log combined;
    error_log               /var/log/nginx/graylog-nerd.mooc.log;
}

server
{
    listen                  *:443 ssl;
    server_name             graylog.nerd.mooc;

    ssl_certificate         /etc/nginx/certificates/niam-cert.pem;
    ssl_certificate_key     /etc/nginx/certificates/niam-key.pem;
    ssl_session_cache       shared:SSL:10m;
    ssl_session_timeout     5m;
    ssl_protocols           TLSv1.2;
    ssl_ciphers             ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;

    ssl_prefer_server_ciphers on;

    index  index.html index.htm index.php;

    access_log /var/log/nginx/graylog-nerd.mooc-tls.com.access.log combined;
    error_log  /var/log/nginx/graylog-nerd.mooc-tls.error.log;

    location /
        {
            # Simple requests
            if ($request_method ~* "(GET|POST)")
            {
                add_header "Access-Control-Allow-Origin"  *;
            }

            # Preflighted requests
            if ($request_method = OPTIONS )
            {
                    add_header "Access-Control-Allow-Origin"  *;
                    add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
                    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                    return 200;
            }

            proxy_pass                              http://graylog;
            proxy_redirect                          http://graylog:443/api /api;
            proxy_read_timeout                      90;
            proxy_connect_timeout                   90;
            proxy_set_header Host                   $http_host;
            proxy_set_header X-Forwarded-Host       $host;
            proxy_set_header X-Forwarded-Server     $host;
            proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
            proxy_set_header X-Graylog-Server-URL   https://$server_name/;
        }
}
